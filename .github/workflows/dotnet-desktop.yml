name: .NET Core Desktop

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: TextFormatterWinApp.sln
      Project_Name: TextFormatterWinApp
      Platform: x64

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup Nuget
      uses: Nuget/setup-nuget@v1.0.5

    - name: Restore nuget packages
      run: nuget restore ${{ env.Solution_Name }}

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build the application
      run:
        msbuild ${{ env.Solution_Name }}
        /p:BuildProjectReferences=false
        /t:${{ env.Project_Name }}
        /p:Configuration=${{ matrix.configuration }}
        /p:Platform="${{ env.Platform }}"

    - name: Upload binary artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.configuration }}-${{ env.Platform }}
        path: ${{ env.Project_Name }}/bin/${{ env.Platform }}/${{ matrix.configuration }}/net6.0-windows/

    - name: ls files (power shell command)
      run: tree /f /a
